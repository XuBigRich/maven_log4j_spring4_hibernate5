<!--  status="INFO" 日志框架本身的输出日志级别  monitorInterval="30" Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数，不低于30秒 -->
<!--在log4j2中， 共有8个级别，按照从低到高为：ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF-->
<!--  Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出。 -->
<Configuration status="INFO" monitorInterval="30">
    <Properties>
        <!--  输出路径  -->
        <Property name="LOG_PATH">../logs/</Property>
    </Properties>

    <!--  日志处理  -->
    <Appenders>
        <!--  控制台输出  -->
        <Console name="Console" target="SYSTEM_ERR">
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%t] [%5level] %c{36}:%L --- %m%n"/>
        </Console>
        <!--  按照一定的规则拆分的日志文件  -->
        <RollingFile name="debug" fileName="${LOG_PATH}/debug/debug.log"
                     filePattern="${LOG_PATH}/debug/debug_%d{yyyy-MM-dd}-%i.log">
            <!--  日志级别过滤器  Filters决定日志事件能否被输出。过滤条件有三个值：ACCEPT(接受)，DENY(拒绝)，NEUTRAL(中立)。-->
            <Filters>
                <ThresholdFilter level="info" onMatch="DENY" onMismatch="NEUTRAL"/>
<!--                只输出debug级别以上的日志-->
                <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
                <!-- 只允许在每天的 8点~8点半 之间输出日志 -->
                <TimeFilter start="08:00:00" end="08:30:00" onMatch="ACCEPT" onMismatch="DENY" />
            </Filters>
            <!--  日志消息格式  -->
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%5level] %l %c{36} - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="24" modulate="true"/>
                <!--  按照文件大小拆分，50MB  -->
                <SizeBasedTriggeringPolicy size="50 MB"/>\
            </Policies>
            <!--  在同一个目录下，文件的个数限定为30个，超过进行覆盖  -->
            <DefaultRolloverStrategy max="30">
                <Delete basePath="${LOG_PATH}/debug" maxDepth="1">
                    <IfFileName glob="debug_*.log"/>
                    <IfLastModified age="15d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
        <!-- 同上  这个会打印出所有的信息，每次大小超过Policies.SizeBasedTriggeringPolicy.size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="info" fileName="${LOG_PATH}/info/info.log"
                     filePattern="${LOG_PATH}/info/info_%d{yyyy-MM-dd}-%i.log">
            <Filters>
                <ThresholdFilter level="warn" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%5level] %l %c{36} - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="24" modulate="true"/>
                <SizeBasedTriggeringPolicy size="50 MB"/>\
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了30 -->
            <DefaultRolloverStrategy max="30">
                <Delete basePath="${LOG_PATH}/info" maxDepth="1">
                    <IfFileName glob="info_*.log"/>
                    <IfLastModified age="15d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
        <RollingFile name="warn" fileName="${LOG_PATH}/warn/warn.log"
                     filePattern="${LOG_PATH}/warn/warn_%d{yyyy-MM-dd}-%i.log">
            <Filters>
                <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%5level] %l %c{36} - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="24" modulate="true"/>
                <SizeBasedTriggeringPolicy size="50 MB"/>\
            </Policies>
            <DefaultRolloverStrategy max="30">
                <Delete basePath="${LOG_PATH}/warn" maxDepth="1">
                    <IfFileName glob="warn_*.log"/>
                    <IfLastModified age="15d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
        <RollingFile name="error" fileName="${LOG_PATH}/error/error.log"
                     filePattern="${LOG_PATH}/error/error_%d{yyyy-MM-dd}-%i.log">
            <Filters>
                <ThresholdFilter level="fatal" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%5level] %l %c{36} - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="24" modulate="true"/>
                <!--   每个文件最大50M -->
                <SizeBasedTriggeringPolicy size="50 MB"/>\
            </Policies>
            <DefaultRolloverStrategy max="30">
                <Delete basePath="${LOG_PATH}/error" maxDepth="1">
                    <IfFileName glob="error_*.log"/>
                    <!-- 设置最大保存时间为15天-->
                    <IfLastModified age="15d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>

    </Appenders>
    <!--切换输出级别-->
    <Loggers>
        <!--让slf4j 这个包下的日志级别为 ,但前提是日志加载器选择使用这个日志策略-->
        <!--所有的logger都将继承自root的配置 ，输出时的等级是按照最小级别去输出的-->
        <logger name="slf4j" level="off" additivity="true">
            <appender-ref ref="Console"/>
        </logger>
        <!--  使用rootLogger配置日志级别，日志级别level="info"  -->
        <!--root 是所有logger的父类-->
        <Root level="all">
            <!--指定日志使用的处理器-->
            <AppenderRef ref="Console"/>
            <AppenderRef ref="debug"/>
            <AppenderRef ref="info"/>
            <AppenderRef ref="warn"/>
            <AppenderRef ref="error"/>
        </Root>
    </Loggers>
</Configuration>